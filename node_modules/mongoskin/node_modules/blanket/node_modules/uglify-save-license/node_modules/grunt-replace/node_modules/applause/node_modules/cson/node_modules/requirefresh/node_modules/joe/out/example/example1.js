// Generated by CoffeeScript 1.6.3
(function() {
  var assert, joe, wait;

  assert = require('assert');

  joe = require('../..');

  wait = function(delay, fn) {
    return setTimeout(fn, delay);
  };

  joe.suite('example1', function(suite, test) {
    test('api is readonly within node', function() {
      if ((typeof window !== "undefined" && window !== null) === false) {
        joe.blah = true;
        return assert.ok((joe.blah != null) === false);
      }
    });
    return suite('tests', function(suite, test) {
      suite('async-suite', function(suite, test, done) {
        wait(1 * 1000, function() {
          return test('1/2', function() {
            return assert.ok(true);
          });
        });
        wait(2 * 1000, function() {
          return test('2/2', function() {
            return assert.ok(true);
          });
        });
        return wait(3 * 1000, function() {
          return done();
        });
      });
      suite('async-tests', function(suite, test) {
        test('1/2', function(done) {
          return wait(1 * 1000, function() {
            assert.ok(true);
            return done();
          });
        });
        return test('2/2', function(done) {
          return wait(2 * 1000, function() {
            assert.ok(true);
            return done();
          });
        });
      });
      suite('sync', function(suite, test) {
        test('1/2', function() {
          return assert.ok(true);
        });
        return test('2/2', function() {
          return assert.ok(true);
        });
      });
      suite('async-sync', function(suite, test) {
        test('1/2', function(done) {
          return wait(1 * 1000, function() {
            assert.ok(true);
            return done();
          });
        });
        return test('2/2', function() {
          return assert.ok(true);
        });
      });
      return suite('deliberate-failure', function(suite, test) {
        test('1/2', function(done) {
          return wait(1 * 1000, function() {
            assert.ok(false);
            return done();
          });
        });
        return test('2/2', function() {
          return assert.ok(false);
        });
      });
    });
  });

}).call(this);
